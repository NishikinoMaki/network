<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

	<context:component-scan base-package="nagaseiori" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Component"/>
	</context:component-scan>

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
		<property name="fileEncoding" value="utf-8" />
	</bean>
	
	<bean id="SpringContextUtil" class="nagaseiori.commons.SpringContextUtil"></bean>

	<bean id="detailStorageHikariConfig" class="com.zaxxer.hikari.HikariConfig">
	    <property name="poolName" value="springHikariCP" />
	    <property name="connectionTestQuery" value="SELECT 1" />
	    <property name="dataSourceClassName" value="com.mysql.jdbc.jdbc2.optional.MysqlDataSource" />
	    <property name="dataSourceProperties">
	        <props>
	            <prop key="url">${jdbc_url_detail_storage}</prop>
	            <prop key="user">${jdbc_user_detail_storage}</prop>
	            <prop key="password">${jdbc_password_detail_storage}</prop>
	        </props>
	    </property>
	</bean>

	<bean id="detailStorageDataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
	    <constructor-arg ref="detailStorageHikariConfig"/>
	</bean>

	<bean id="detailStorageTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg ref="detailStorageDataSource" />
	</bean>
	
	<bean id="syncStorageHikariConfig" class="com.zaxxer.hikari.HikariConfig">
	    <property name="poolName" value="springHikariCP" />
	    <property name="connectionTestQuery" value="SELECT 1" />
	    <property name="dataSourceClassName" value="com.mysql.jdbc.jdbc2.optional.MysqlDataSource" />
	    <property name="dataSourceProperties">
	        <props>
	            <prop key="url">${jdbc_url_sync_storage}</prop>
	            <prop key="user">${jdbc_user_sync_storage}</prop>
	            <prop key="password">${jdbc_password_sync_storage}</prop>
	        </props>
	    </property>
	</bean>

	<bean id="syncStorageDataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
	    <constructor-arg ref="syncStorageHikariConfig"/>
	</bean>

	<bean id="syncStorageTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg ref="syncStorageDataSource" />
	</bean>
	
	<bean id="momentsHikariConfig" class="com.zaxxer.hikari.HikariConfig">
	    <property name="poolName" value="springHikariCP" />
	    <property name="connectionTestQuery" value="SELECT 1" />
	    <property name="dataSourceClassName" value="com.mysql.jdbc.jdbc2.optional.MysqlDataSource" />
	    <property name="dataSourceProperties">
	        <props>
	            <prop key="url">${jdbc_url_moments}</prop>
	            <prop key="user">${jdbc_user_moments}</prop>
	            <prop key="password">${jdbc_password_moments}</prop>
	        </props>
	    </property>
	</bean>

	<bean id="momentsDataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
	    <constructor-arg ref="momentsHikariConfig"/>
	</bean>

	<bean id="momentsTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg ref="momentsDataSource" />
	</bean>
	
</beans>